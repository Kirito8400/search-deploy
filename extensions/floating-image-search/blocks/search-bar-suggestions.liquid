<section class="block-{{ block.id }} vs-sg-search-suggestions-wrapper">
  <div class="vs-sg-search-suggestions">
    <div class="vs-sg-search-suggestions-container">
      <div class="vs-sg-popular-query">
        <h3>Popular Query</h3>
        <div class="vs-sg-popular-query-grid">
          <span class="vs-sg-query-item">Merino Wool Socks</span>
          <span class="vs-sg-query-item">Merino Wool Socks Mid Length</span>
          <span class="vs-sg-query-item">Merino Wool Socks Full Length</span>
          <span class="vs-sg-query-item">Cotton Work Socks Mid Length (Pack of 3)</span>
          <span class="vs-sg-query-item">Hybrid Vest</span>
          <span class="vs-sg-query-item">Hose Down T-shirt</span>
          <span class="vs-sg-query-item">Hose Down Shorts</span>
          <span class="vs-sg-query-item">Cotton Work Socks Full Length (Pack of 3)</span>
          <span class="vs-sg-query-item">Monsoon Nunatak Smock</span>
          <span class="vs-sg-query-item">Baseline Pull-on Zip Top</span>
          <span class="vs-sg-query-item">Ballistic Fleece Hoodie</span>
        </div>
      </div>

      <div class="vs-sg-popular-search-products">
        <h3>Popular Search Product Images</h3>
        <div class="vs-sg-popular-products-grid">
          <a href="/products/merino-wool-socks-orange" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              width=""
              height=""
              loading="lazy"
            >
          </a>
          <a href="/products/merino-wool-socks-green" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              loading="lazy"
              width=""
              height=""
            >
          </a>
          <a href="/products/merino-wool-socks-multi" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              width=""
              height=""
              loading="lazy"
            >
          </a>
          <a href="/products/hybrid-vest" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              width=""
              height=""
              loading="lazy"
            >
          </a>
          <a href="/products/hose-down-tshirt" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              width=""
              height=""
              loading="lazy"
            >
          </a>
          <a href="/products/hose-down-shorts" class="vs-sg-product-image">
            <img
              src="https://synasisio.myshopify.com/cdn/shop/files/Men_sBallisticHoody_DeepForest_2048px.jpg?v=1746982125&width=823"
              alt="Merino Wool Socks Orange"
              loading="lazy"
              width=""
              height=""
            >
          </a>
        </div>
      </div>

      <!-- Dynamic search results section -->
      <div class="vs-sg-dynamic-search-results" style="display: none;">
        <h3>Products</h3>
        <div class="vs-sg-dynamic-products-grid">
          <!-- Dynamic products will be loaded here -->
          <div class="vs-sg-loading" style="text-align: center; display: block; padding: 20px;">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="vs-sg-spinner"
            >
              <circle cx="12" cy="12" r="10"></circle>
              <path d="M12 6v6l4 2"></path>
            </svg>
            <p>Searching products...</p>
          </div>
        </div>
      </div>

      {% comment %} <div class="">
        <div class="vs-sg-loading" style="text-align: center; padding: 20px;">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="vs-sg-spinner">
            <circle cx="12" cy="12" r="10"></circle>
            <path d="M12 6v6l4 2"></path>
          </svg>
          <p>Searching products...</p>
        </div>
      </div> {% endcomment %}
    </div>
  </div>
</section>

<style>
  .vs-sg-search-suggestions-wrapper .vs-snp-image-search-error {
    position: static !important;
    transform: none !important;
    z-index: 9;
    box-shadow: 2px 2px;
  }
</style>

{% schema %}
{
  "name": "Search Suggestions",
  "target": "body",
  "stylesheet": "search-suggestions.css",
  "settings": [
    {
      "type": "header",
      "content": "Popular Queries"
    },
    {
      "type": "checkbox",
      "id": "show_popular_queries",
      "label": "Show Popular Queries",
      "default": true
    },
    {
      "type": "header",
      "content": "Popular Products"
    },
    {
      "type": "checkbox",
      "id": "show_popular_products",
      "label": "Show Popular Product Images",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_dynamic_search",
      "label": "Enable Dynamic Search Results",
      "default": true
    },
    {
      "type": "range",
      "id": "search_delay",
      "min": 100,
      "max": 1000,
      "step": 100,
      "unit": "ms",
      "label": "Search Delay",
      "default": 300,
      "info": "Delay before searching after typing stops"
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Constants and configuration
    const CONFIG = {
      searchDelay: {{ block.settings.search_delay | default: 300 }},
      enableDynamicSearch: {{ block.settings.enable_dynamic_search | default: true }},
      showPopularQueries: {{ block.settings.show_popular_queries | default: true }},
      showPopularProducts: {{ block.settings.show_popular_products | default: true }},
      maxSearchResults: 6,
      placeholderImage: 'https://cdn.shopify.com/s/files/1/0533/2089/files/placeholder-images-image_large.png'
    };

    // DOM Elements
    const suggestionsWrapper = document.querySelector('.vs-sg-search-suggestions-wrapper');
    const searchForms = document.querySelectorAll('header form[action="/search"]');

    if (!suggestionsWrapper || searchForms.length === 0) return;

    // Add CSS for spinner and search results
    addStyles();

    // Initialize search suggestions for each search form
    searchForms.forEach(form => initializeSearchSuggestions(form));

    // Remove the original template element after cloning
    suggestionsWrapper.remove();

    // Add global document click handler
    setupGlobalClickHandler();

    /**
     * Initialize search suggestions for a specific search form
     * @param {HTMLElement} form - The search form element
     */
    function initializeSearchSuggestions(form) {
      // Clone the suggestions wrapper
      const clonedSuggestions = suggestionsWrapper.cloneNode(true);
      form.appendChild(clonedSuggestions);

      // Find search input within this form
      const searchInput = form.querySelector('input[type="search"], [name="q"], .search-input, .search__input');
      if (!searchInput) return;

      // Get UI elements
      const elements = {
        dynamicSearchResults: clonedSuggestions.querySelector('.vs-sg-dynamic-search-results'),
        dynamicProductsGrid: clonedSuggestions.querySelector('.vs-sg-dynamic-products-grid'),
        popularQuery: clonedSuggestions.querySelector('.vs-sg-popular-query'),
        popularProducts: clonedSuggestions.querySelector('.vs-sg-popular-search-products'),
        popularProductsGrid: clonedSuggestions.querySelector('.vs-sg-popular-products-grid'),
        popularQueryItems: clonedSuggestions.querySelectorAll('.vs-sg-query-item')
      };

      // Set up debounce for search
      let searchTimeout;

      // Add event listeners
      setupSearchInputListener(searchInput, elements, searchTimeout);
      setupFormSubmitListener(form, searchInput, clonedSuggestions);
      setupPopularProductsListener(elements.popularProductsGrid, form, clonedSuggestions);
      setupPopularQueriesListener(elements.popularQueryItems, searchInput, elements, searchTimeout);
    }

    /**
     * Set up the search input listener for dynamic search
     */
    function setupSearchInputListener(searchInput, elements, searchTimeout) {
      searchInput.addEventListener('input', function() {
        const query = this.value.trim();
        clearTimeout(searchTimeout);

        if (query.length > 0) {
          // Show search results, hide popular sections
          toggleVisibility(elements, true);

          // Debounce search
          searchTimeout = setTimeout(() => {
            fetchSearchResults(query, elements.dynamicProductsGrid);
          }, CONFIG.searchDelay);
        } else {
          // Show popular sections, hide search results
          toggleVisibility(elements, false);
        }
      });
    }

    /**
     * Toggle visibility of search UI elements
     * @param {Object} elements - UI elements object
     * @param {boolean} isSearchActive - Whether search is active
     */
    function toggleVisibility(elements, isSearchActive) {
      elements.dynamicSearchResults.style.display = isSearchActive ? 'block' : 'none';
      elements.popularQuery.style.display = isSearchActive ? 'none' : 'block';
      elements.popularProducts.style.display = isSearchActive ? 'none' : 'block';
    }

    /**
     * Set up form submit listener
     */
    function setupFormSubmitListener(form, searchInput, clonedSuggestions) {
      form.addEventListener('submit', function(e) {
        if (searchInput.value.trim()) {
          clonedSuggestions.style.display = 'none';
        }
      });
    }

    /**
     * Set up popular products click listeners
     */
    function setupPopularProductsListener(popularProductsGrid, form, clonedSuggestions) {
      if (!popularProductsGrid) return;

      const popularImageLinks = popularProductsGrid.querySelectorAll('.vs-sg-product-image');
      popularImageLinks.forEach(link => {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          const imageUrl = this.querySelector('img').src;
          if (!imageUrl) return;

          handlePopularImageClick(imageUrl, form, clonedSuggestions);
        });
      });
    }

    /**
     * Handle click on popular image
     */
    function handlePopularImageClick(imageUrl, form, clonedSuggestions) {
      const imageSearchModal = form.querySelector('#vs-search-bar-modal');
      const fileInput = imageSearchModal ? imageSearchModal.querySelector('#vs-snp-image-search-file-input') : null;

      if (!imageSearchModal || !fileInput) {
        console.error('Image search modal or file input not found.');
        return;
      }

      // Open the image search modal
      imageSearchModal.classList.add('active');

      // Set up modal close on outside click
      setupModalCloseListener(imageSearchModal);

      // Fetch and process the image
      fetchAndProcessImage(imageUrl, fileInput, clonedSuggestions);
    }

    /**
     * Set up modal close listener
     */
    function setupModalCloseListener(imageSearchModal) {
      imageSearchModal.addEventListener('click', function(event) {
        if (event.target !== imageSearchModal) return;
        
        imageSearchModal.classList.remove('active');
        
        // Reset UI elements
        const wrappers = document.querySelectorAll('.vs-snp-image-upload-result-wrapper');
        wrappers.forEach(wrapper => {
          wrapper.classList.remove('after');
        });
      });
    }

    /**
     * Fetch and process image for search
     */
    function fetchAndProcessImage(imageUrl, fileInput, clonedSuggestions) {
      fetch(imageUrl)
        .then(response => {
          if (!response.ok) throw new Error('Failed to fetch image');
          return response.blob();
        })
        .then(blob => {
          // Create a File object from the blob
          const file = new File([blob], 'popular-image.jpg', { type: blob.type });

          // Trigger file input change
          const dataTransfer = new DataTransfer();
          dataTransfer.items.add(file);
          fileInput.files = dataTransfer.files;
          fileInput.dispatchEvent(new Event('change', { bubbles: true }));

          // Hide suggestions
          clonedSuggestions.style.display = 'none';
        })
        .catch(error => {
          console.error('Error fetching popular image for search:', error);
        });
    }

    /**
     * Set up popular queries click listeners
     */
    function setupPopularQueriesListener(popularQueryItems, searchInput, elements, searchTimeout) {
      if (!popularQueryItems || popularQueryItems.length === 0) return;

      popularQueryItems.forEach(item => {
        item.addEventListener('click', function() {
          const query = this.textContent.trim();
          if (!query) return;

          // Set search input value and trigger search
          searchInput.value = query;
          searchInput.dispatchEvent(new Event('input', { bubbles: true }));

          // Immediately search without waiting for debounce
          clearTimeout(searchTimeout);
          toggleVisibility(elements, true);
          fetchSearchResults(query, elements.dynamicProductsGrid);
        });
      });
    }

    /**
     * Fetch search results from Shopify Predictive Search API
     * @param {string} query - Search query
     * @param {HTMLElement} resultsContainer - Container for results
     */
    function fetchSearchResults(query, resultsContainer) {
      // Show loading state
      // showLoadingState(resultsContainer);

      // Fetch products from Shopify Predictive Search API
      fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product`)
        .then(response => {
          if (!response.ok) throw new Error('Search request failed');
          return response.json();
        })
        .then(data => {
          // Hide image search modal if present
          const imageSearchModal = document.querySelector('.vs-snp-image-search-modal');
          if (imageSearchModal) imageSearchModal.style.display = 'none';

          // Process and display results
          displaySearchResults(data, resultsContainer);
        })
        .catch(error => {
          console.error('Error fetching search results:', error);
          resultsContainer.innerHTML = '<p class="vs-sg-error">Error loading search results. Please try again.</p>';
        });
    }

    /**
     * Show loading state in results container
     */
    // function showLoadingState(resultsContainer) {
    //   resultsContainer.innerHTML = `
    //     <div class="vs-sg-loading" style="text-align: center; padding: 20px;">
    //       <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="vs-sg-spinner">
    //         <circle cx="12" cy="12" r="10"></circle>
    //         <path d="M12 6v6l4 2"></path>
    //       </svg>
    //       <p>Searching products...</p>
    //     </div>
    //   `;
    // }

    /**
     * Display search results
     */
    function displaySearchResults(data, resultsContainer) {
      const products = data.resources?.results?.products || [];

      if (products.length > 0) {
        // Build HTML for products
        let productsHTML = '';

        products.slice(0, CONFIG.maxSearchResults).forEach(product => {
          productsHTML += createProductHTML(product);
        });

        resultsContainer.innerHTML = productsHTML;
      } else {
        // No results found
        resultsContainer.innerHTML = '<p class="vs-sg-no-results">No products found. Try a different search term.</p>';
      }
    }

    /**
     * Create HTML for a single product
     */
    function createProductHTML(product) {
      return `
        <a href="${product.url}" class="vs-sg-product-image">
          <img src="${product.image || CONFIG.placeholderImage}" alt="${product.title}" loading="lazy" style="width: 6rem !important;">
          <div class="vs-content-wrapper">
            <div class="vs-sg-product-title">${product.title}</div>
            <div class="vs-sg-product-price">${product.price}</div>
          </div>
        </a>
      `;
    }

    /**
     * Add CSS styles for spinner and search results
     */
    function addStyles() {
      const style = document.createElement('style');
      style.textContent = `
        @keyframes vs-sg-spin {
          to { transform: rotate(360deg); }
        }
        .vs-sg-spinner {
          animation: vs-sg-spin 1s linear infinite;
        }
        .vs-sg-product-title {
          margin-top: 8px;
          font-size: 14px;
          font-weight: 500;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .vs-sg-product-price {
          font-size: 13px;
          color: #555;
          margin-top: 4px;
        }
        .vs-sg-no-results, .vs-sg-error {
          text-align: center;
          padding: 20px;
          color: #555;
        }
      `;
      document.head.appendChild(style);
    }

    /**
     * Set up global document click handler
     */
    function setupGlobalClickHandler() {
      document.addEventListener('click', function(e) {
        e.stopPropagation();
        
        // Check if click is inside suggestions
        const isClickInside = e.target.closest('.vs-sg-search-suggestions-wrapper');
        
        if (!isClickInside) {
          // Reset UI elements
          resetUIElements();
          
          // Show search suggestions wrapper
          const searchSuggestionsWrapper = document.querySelector('form[action="/search"] .vs-sg-search-suggestions-wrapper');
          if (searchSuggestionsWrapper) {
            searchSuggestionsWrapper.style.display = 'block';
            
            // Reset visibility of sections
            const dynamicResults = searchSuggestionsWrapper.querySelector('.vs-sg-dynamic-search-results');
            const popularProducts = searchSuggestionsWrapper.querySelector('.vs-sg-popular-search-products');
            const popularQuery = searchSuggestionsWrapper.querySelector('.vs-sg-popular-query');
            
            if (dynamicResults) dynamicResults.style.display = 'none';
            if (popularProducts) popularProducts.style.display = 'block';
            if (popularQuery) popularQuery.style.display = 'block';
          }
        }
      });
    }

    /**
     * Reset UI elements after clicking outside
     */
    function resetUIElements() {
      // Remove post-image upload styling
      const elements = [
        '.vs-snp-image-search-modal-content',
        '.vs-snp-image-search-modal-header',
        '.vs-snp-image-upload-result-wrapper',
        '.vs-snp-image-search-modal-body',
        '.vs-snp-image-search-upload-area',
        '.vs-snp-image-search-results',
        '.vs-snp-image-search-popular'
      ];
      
      elements.forEach(selector => {
        const element = document.querySelector(selector);
        if (element) element.classList.remove('after');
      });
      
      // Additional resets
      const uploadArea = document.querySelector('.vs-snp-image-search-upload-area');
      if (uploadArea) uploadArea.classList.remove('has-content');
      
      const uploadButton = document.querySelector('.vs-snp-upload-another-button');
      if (uploadButton) uploadButton.style.display = 'none';
    }
  });
</script>
